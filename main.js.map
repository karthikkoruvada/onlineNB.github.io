{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/branch.pipe.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/date.pipe.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/logoutstudent/logoutstudent.component.css","webpack:///./src/app/logoutstudent/logoutstudent.component.html","webpack:///./src/app/logoutstudent/logoutstudent.component.ts","webpack:///./src/app/notificationsadmin/notificationsadmin.component.css","webpack:///./src/app/notificationsadmin/notificationsadmin.component.html","webpack:///./src/app/notificationsadmin/notificationsadmin.component.ts","webpack:///./src/app/notificationsstud/notificationsstud.component.css","webpack:///./src/app/notificationsstud/notificationsstud.component.html","webpack:///./src/app/notificationsstud/notificationsstud.component.ts","webpack:///./src/app/profileadmin/profileadmin.component.css","webpack:///./src/app/profileadmin/profileadmin.component.html","webpack:///./src/app/profileadmin/profileadmin.component.ts","webpack:///./src/app/profilestud/profilestud.component.css","webpack:///./src/app/profilestud/profilestud.component.html","webpack:///./src/app/profilestud/profilestud.component.ts","webpack:///./src/app/resultsadmin/resultsadmin.component.css","webpack:///./src/app/resultsadmin/resultsadmin.component.html","webpack:///./src/app/resultsadmin/resultsadmin.component.ts","webpack:///./src/app/resultsstud/resultsstud.component.css","webpack:///./src/app/resultsstud/resultsstud.component.html","webpack:///./src/app/resultsstud/resultsstud.component.ts","webpack:///./src/app/rou/rou.module.ts","webpack:///./src/app/serve.service.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/success/success.component.css","webpack:///./src/app/success/success.component.html","webpack:///./src/app/success/success.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"row mr-0 ml-0 \\\">\\n  <div class=\\\"col mt-5\\\" >\\n\\n<h1 class=\\\"text-danger\\\">  <u>About our college:</u></h1>\\n<br/>\\n<br/>\\n<p  style=\\\"text-indent:80px;font-size:25px;margin-bottom:150px\\\">\\n  <b>\\n      JNTU (Jawaharlal Nehru Technological University) was originally ‘The College of Engineering, Vizagpatnam’ at the time of its establishment in 1946. It is now a sprawling campus of 110 acres, green with mango trees in the fast developing Port city of Kakinada, East coast of peninsula India.\\n  </b>\\n</p>\\n\\n\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row  ml-0 mr-0\\\">\\n  <div class=\\\"col-3\\\"></div>\\n\\n  <div class=\\\"col-6 \\\">\\n    <div clas=\\\"jumbotron \\\">\\n        <br/>\\n        <br/>\\n\\n        <h1 >Admin registration</h1>\\n        <br/>\\n        <br/>\\n        <br/>\\n        \\n      <form #ref=\\\"ngForm\\\" (ngSubmit)=\\\"admin(ref.value)\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <p><label for=\\\"user\\\"> <b>EmployeeId: </b></label>\\n                <input id=\\\"user\\\" type=\\\"text\\\" placeholder=\\\"karthik\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required  pattern=\\\"[0-9][0-9][a-z][a-z]\\\\d\\\\d\\\\d\\\"  maxlength=\\\"7\\\" #ref1=\\\"ngModel\\\">\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref1.touched&&ref1.pristine&&ref1.invalid\\\"> name is required</label>\\n                <label class=\\\"alert alert-danger validation-message\\\"*ngIf=\\\"ref1.dirty&&ref1.invalid\\\">enter correct id</label>\\n                \\n                 {{ref1.className}}\\n                \\n\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"pass\\\"> <b>Password:</b></label>\\n              <input id=\\\"pass\\\"   type=\\\"{{check?'text':'password'}}\\\" placeholder=\\\"13a@b3\\\"class=\\\"form-control\\\"name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required  pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,}$\\\"   #ref2=\\\"ngModel\\\">\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"check\\\" name=\\\"check\\\"><label>show password</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.touched&&ref2.pristine&&ref2.invalid\\\">create password</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.errors?.pattern&&ref2.dirty&&ref2.invalid\\\">password be like:1 number,1 special symbol and 1 character atleast</label>\\n \\n              \\n\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"cpass\\\"><b>Confirm Password:</b></label>\\n              <input id=\\\"cpass\\\" placeholder=\\\"13a@b3\\\"  type=\\\"password\\\" #cf=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"cpassword\\\"  [(ngModel)]=\\\"cpassword\\\">\\n              \\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.value!=cf.value\\\">passwords donot match</label>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"p\\\"><b>Email:</b></label>\\n                <input type=\\\"email\\\" id=\\\"p\\\" placeholder=\\\"karthik@gmail.com\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\n              </div>\\n          </div>\\n\\n          \\n        \\n    \\n\\n          <div class=\\\"col-6\\\">\\n\\n              \\n\\n            <div class=\\\"form-group\\\">\\n              <p><label for=\\\"dob\\\"> <b>Date of Birth: </b></label>\\n                <input id=\\\"dob\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"dob\\\">\\n            </div>\\n\\n            <label class=\\\"mt-3\\\"> <b>Gender:</b></label>\\n            <div class=\\\"form-check \\\">\\n                <label class=\\\"form-check-label\\\">\\n    \\n                \\n                 \\n                  <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Male\\\" [(ngModel)]=\\\"male\\\"><b>Male</b>\\n              \\n              </label>\\n              </div>\\n              \\n              <div class=\\\"form-check \\\">\\n                  <label class=\\\"form-check-label\\\">\\n      \\n                \\n                   \\n                    <input type=\\\"radio\\\" class=\\\"form-check-input\\\"  name=\\\"gender\\\" value=\\\"Female\\\" [(ngModel)]=\\\"Female\\\"><b>Female</b>\\n                  \\n                </label>\\n                </div>\\n\\n            <div class=\\\"form-group mt-2\\\">\\n              <label for=\\\"no\\\"><b>Phone number:</b></label>\\n              <input id=\\\"no\\\" placeholder=\\\"7878787878\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phno\\\" required pattern=\\\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"phno\\\" #re=ngModel>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.touched&&re.pristine&&re.invalid\\\">phone no required</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.errors?.pattern&&re.dirty&&re.invalid\\\">enter 10 digit number</label>\\n            </div>\\n\\n            <br/>\\n            <br/>\\n            <button type=\\\"submit\\\"  class=\\\"btn btn-danger mt-4 \\\" style=\\\"margin-left: 250px\\\"  >Register</button>\\n\\n          \\n  \\n\\n            <!-- [disabled]=\\\"!ref.valid\\\" -->\\n\\n          </div>\\n        </div>\\n\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-3\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport{Router}from '@angular/router'\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  admindata:Object;\n\n  check:boolean=false;\n\n  cpassword:string=null;\n  dob:string=null;\n  email:string=null;\n  username:string=null;\n  password:string=null;\n  phno:string=null;\n  Female:string=null;\n  Male:string=null;\n\n  \n\n  constructor(private rou:Router,private ds:ServeService) { }\n\n\n  ngOnInit() {\n\n  }\n  admin(data)\n  {\n    // this.admindata=data;\n    this.rou.navigate(['/home/success']);\n    console.log(data);\n    this.ds.adminRedData(data).subscribe(r=>{\n      alert(\"successfully logged\");\n      this.rou.navigate(['/home']);\n    });\n  }\n  \n  \n\n    \n    \n  }\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor( )\n  {\n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule} from'@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { AboutComponent } from './about/about.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { HomeComponent} from './home/home.component';\nimport { ContactComponent} from './contact/contact.component';\n\nimport {  StudentComponent} from './student/student.component';\nimport {  LoginComponent} from './login/login.component';\nimport { RouModule } from './rou/rou.module';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport { LogoutstudentComponent } from './logoutstudent/logoutstudent.component';\nimport { SuccessComponent } from './success/success.component';\nimport { ProfileadminComponent } from './profileadmin/profileadmin.component';\n\nimport { NotificationsadminComponent } from './notificationsadmin/notificationsadmin.component';\nimport { ResultsadminComponent } from './resultsadmin/resultsadmin.component';\nimport { ResultsstudComponent } from './resultsstud/resultsstud.component';\nimport { NotificationsstudComponent } from './notificationsstud/notificationsstud.component';\n\nimport { ProfilestudComponent } from './profilestud/profilestud.component';\nimport { BranchPipe } from './branch.pipe';\nimport { DatePipe } from './date.pipe';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    \n    AdminComponent,\n    HomeComponent,\n    ContactComponent,\n    StudentComponent,\n    LoginComponent,\n    LogoutComponent,\n    LogoutstudentComponent,\n    SuccessComponent,\n    ProfileadminComponent,\n    \n    NotificationsadminComponent,\n    ResultsadminComponent,\n    ResultsstudComponent,\n    NotificationsstudComponent,\n    \n    ProfilestudComponent,\n    \n    BranchPipe,\n    \n    DatePipe,\n    \n    \n   \n    \n    \n    \n    \n  \n    \n  \n   \n   \n   \n  ],\n  imports: [\n    BrowserModule,\n   \n    FormsModule,\n   \n    RouModule,\n    HttpClientModule\n   \n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'branch'\n})\nexport class BranchPipe implements PipeTransform {\n\n  transform(data: any[], searchbranch: string): any {\n    if(!data||!searchbranch){\n    return data;\n    }\n    else\n    {\n    return data.filter(x=>x.Branch.toLowerCase().indexOf(searchbranch.toLowerCase())!==-1);\n    }\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row ml-0 mr-0\\\" >\\n <div class=\\\"col-4\\\"></div>\\n  <div class=\\\"col-4 \\\" >\\n      <h1  >contact</h1>\\n     <!-- <form #ref=\\\"ngForm\\\" (ngSubmit)=\\\"contact(ref.value)\\\">\\n        <br/>\\n          <br/>\\n         \\n          <br/>\\n          <br/>\\n\\n      <div class=\\\"form-group\\\">\\n          <p><label for=\\\"user\\\"> <b>Email: </b></label>\\n            <input id=\\\"user\\\" type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\n        </div>\\n\\n        <div class=\\\"form-group mt-2\\\">\\n            <label for=\\\"no\\\"><b>Phone number:</b></label>\\n            <input id=\\\"no\\\" placeholder=\\\"7878787878\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phno\\\" required pattern=\\\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"phno\\\" #re=ngModel>\\n            <label class=\\\"text-danger\\\" *ngIf=\\\"re.touched&&re.pristine&&re.invalid\\\">phone no required</label>\\n            <label class=\\\"text-danger\\\" *ngIf=\\\"re.errors?.pattern&&re.dirty&&re.invalid\\\">enter 10 digit number</label>\\n          </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"cpass\\\"><b>Enter your meessage:</b></label>\\n          <input id=\\\"cpass\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\">\\n        </div>\\n        <button type=\\\"submit\\\"  class=\\\"btn btn-danger mt-5\\\" style=\\\"margin-left:400px\\\" >Register</button>\\n      </form>\\n  </div> -->\\n  <div class=\\\"col-4\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport{ Router }from '@angular/router'\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  contactdata:Object;\n  constructor(private router:Router)\n   { \n\n   }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'date'\n})\nexport class DatePipe implements PipeTransform {\n\n  transform(data: any[], searchdate: string): any {\n    if(!data||!searchdate){\n    return data;\n    }\n    else\n    {\n    return data.filter(x=>x.Date.toLowerCase().indexOf(searchdate.toLowerCase())!==-1);\n    }\n    }\n\n}\n","module.exports = \".dropdown:hover .dropdown-menu {\\r\\n    display: block;\\r\\n    }\"","module.exports = \"\\n\\n    <nav class=\\\"navbar navbar-expand-sm bg-dark  navbar-dark sticky-top\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggler\\\"  data-toggle=\\\"collapse\\\" data-target=\\\"#k\\\">\\n        <span class=\\\"navbar-toggler-icon \\\"> \\n\\n        </span>\\n      </button>\\n<div class=\\\"collapse navbar-collapse\\\" id=\\\"k\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"\\\"> <img class=\\\"nav-link\\\" src=\\\"assets/k.png\\\" width=\\\"90px\\\" height=\\\"90px\\\"> </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"home\\\" class=\\\"nav-link text-warning mt-3\\\" style=\\\"font-size:25px\\\"> Home </a>\\n        </li>\\n\\n\\n\\n\\n\\n        <li class=\\\"nav-item dropdown mt-3 \\\" style=\\\"font-size:25px;margin-left: 1300px\\\">\\n          <a class=\\\"nav-link dropdown-toggle text-warning\\\" data-toggle=\\\"dropdown\\\" href=\\\"#drop\\\">Register</a>\\n          <div class=\\\"dropdown-menu  bg-dark\\\" id=\\\"#drop\\\">\\n            <a class=\\\"dropdown-item text-warning\\\" style=\\\"font-size:20px\\\" routerLink=\\\"admin\\\">Admin</a>\\n            <a class=\\\"dropdown-item text-warning\\\" style=\\\"font-size:20px\\\" routerLink=\\\"student\\\">Student</a>\\n\\n\\n          </div>\\n\\n        </li>\\n\\n\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"login\\\" class=\\\"nav-link text-warning mt-3\\\" style=\\\"font-size:25px;margin-left: 20px\\\"> Login </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"contact\\\" class=\\\"nav-link text-warning mt-3\\\" style=\\\"font-size:25px;margin-left: 20px\\\">Contact\\n          </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"about\\\" class=\\\"nav-link text-warning mt-3\\\" style=\\\"font-size:25px;margin-left: 20px\\\">About </a>\\n        </li>\\n\\n      </ul>\\n\\n    </div>\\n\\n    </nav>\\n \\n\\n\\n\\n\\n\\n<div class=\\\"row no-gutters\\\">\\n\\n  <div class=\\\"col-9\\\">\\n    <img style=\\\"background-color:orangered\\\" width=\\\"100%\\\" height=\\\"30px\\\">\\n\\n\\n    <div id=\\\"demo\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n\\n      <ul class=\\\"carousel-indicators\\\">\\n        <li data-target=\\\"#demo\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n        <li data-target=\\\"#demo\\\" data-slide-to=\\\"1\\\"></li>\\n        <li data-target=\\\"#demo\\\" data-slide-to=\\\"2\\\"></li>\\n        <li data-target=\\\"#demo\\\" data-slide-to=\\\"3\\\"></li>\\n\\n      </ul>\\n\\n\\n\\n      <!-- The slideshow -->\\n      <div class=\\\"carousel-inner\\\">\\n        <div class=\\\"carousel-item active\\\">\\n          <img src=\\\"assets\\\\78.jpg\\\" alt=\\\"Los Angeles\\\" style=\\\"width:100%;height:540px\\\">\\n        </div>\\n\\n        <div class=\\\"carousel-item\\\">\\n          <img src=\\\"assets\\\\42.jpg\\\" alt=\\\"New York\\\" style=\\\"width:100%;height:540px\\\">\\n        </div>\\n\\n        <div class=\\\"carousel-item\\\">\\n          <img src=\\\"assets\\\\i.jpg\\\" alt=\\\"New York\\\" style=\\\"width:100%;height:540px\\\">\\n        </div>\\n\\n        <div class=\\\"carousel-item\\\">\\n            <img src=\\\"assets\\\\o.jpg\\\" alt=\\\"New York\\\" style=\\\"width:100%;height:540px\\\">\\n          </div>\\n      </div>\\n\\n      <!-- Left and right controls -->\\n      <a class=\\\"carousel-control-prev\\\" href=\\\"#demo\\\" data-slide=\\\"prev\\\">\\n        <span class=\\\"carousel-control-prev-icon\\\"></span>\\n      </a>\\n      <a class=\\\"carousel-control-next\\\" href=\\\"#demo\\\" data-slide=\\\"next\\\">\\n        <span class=\\\"carousel-control-next-icon\\\"></span>\\n      </a>\\n    </div>\\n    <marquee direction=\\\"left\\\" truespeed=\\\"30\\\" class=\\\"bg-mute mt-0\\\">\\n      <h5 class=\\\"text-danger \\\" style=\\\"font-size:40px\\\"> <b>welcome to college notice board</b></h5>\\n\\n    </marquee>\\n    <div class=\\\"mt-0\\\" style=\\\"background-image:url(assets/012.jpeg)\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n\\n \\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n  <div class=\\\"col-3 \\\" >\\n\\n    <div class=\\\"card\\\" style=\\\"width: 100%\\\">\\n      <div class=\\\"card-header \\\">\\n        <h2 class=\\\"text-danger\\\" style=\\\"text-align: center\\\">Updates </h2>\\n      </div>\\n    </div>\\n    <div class=\\\"jumbotron\\\" style=\\\"height:100%; background-color:darkslategrey\\\">\\n\\n      <marquee direction=\\\"down\\\" truespeed=\\\"30\\\"  onMouseOver=\\\"this.stop()\\\" onMouseOut=\\\"this.start()\\\" >\\n        \\n\\n        \\n        <a  style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a  style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a  style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a   style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a  style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a   style=\\\"color: darkorange\\\"href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        <a  style=\\\"color: darkorange\\\" href=\\\"\\\">A scrolling text created with HTML Marquee element</a><br />\\n\\n        <br />\\n        <br />\\n\\n        \\n\\n\\n\\n\\n    \\n\\n\\n\\n      </marquee>\\n    </div>\\n  </div>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"row ml-0 mr-0\\\" >\\n    <div class=\\\"col-4\\\"></div>\\n    <div class=\\\"col-4\\\">\\n      <div clas=\\\"jumbotron bg-success\\\">\\n          <br/>\\n          <br/>\\n          <h1  >Login</h1>\\n          <br/>\\n          <form #ref=\\\"ngForm\\\" (ngSubmit)=\\\"method(ref.value)\\\">\\n\\n\\n          <div class=\\\"form-group\\\">\\n            <p><label for=\\\"user\\\"> <b>Username: </b></label>\\n              <input id=\\\"user\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"karthik\\\" name=\\\"username\\\"  required [(ngModel)]=\\\"username\\\">\\n              <!-- <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.touched&&fr.invalid&&fr.pristine\\\">username is mandatory </label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.invalid&&fr.errors?.minlength&&fr.dirty\\\">minimum 5 char required </label> -->\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"cpass\\\"><b> Password:</b></label>\\n            <input id=\\\"cpass\\\" placeholder=\\\"13a@b3\\\"  type=\\\"{{check?'text':'password'}}\\\" class=\\\"form-control\\\" required name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"check\\\" name=\\\"check\\\"><label>show password</label>\\n          </div>\\n\\n          <button type=\\\"submit\\\"   class=\\\"btn btn-danger mt-4 \\\" [disabled]=\\\"!ref.valid\\\" >Login</button>\\n        </form>\\n      </div>\\n  \\n    \\n  </div>\\n  <div class=\\\"col-4\\\"></div>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport{Router} from '@angular/router'\nimport { ServeService } from '../serve.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router:Router,private ds:ServeService)\n   { }\n\n\n  ngOnInit() {\n  }\n\n  // s1:string=\"karthik\";\n  // s2:string=\"karthik\";\n  // s3:string=\"nandhu\";\n  // s4:string=\"nandhu\";\n  check:boolean=false;\n  r:any;\n\n  // username:string=null;\n  // password:string=null;\n\n  method(data)\n  {\n    //   if(this.s1.match(data.username)&&this.s2.match(data.password))\n    //   {\n    //     this.router.navigate(['logout']);\n    //   }\n    // else if(this.s3.match(data.username)&&this.s4.match(data.password))\n    //   {\n    //     this.router.navigate(['logoutstudent']);\n    //   }\n\n    this.ds.loginCheck(data).subscribe(r=>{\n      console.log(r[0]);\n      this.r=r[0];\n      if(r[0]!=null)\n      {\n        alert(\"login successfull\");\n        if((r[0].username).length==7)\n        {\n          this.router.navigate(['logout']);\n        }\n        else{\n\n          this.router.navigate(['logoutstudent']);\n        }\n        \n      }\n      else{\n        alert(\"login failed\");\n      }\n    });\n\n    this.ds.setDataFromLogin(this.r);\n\n\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <nav class=\\\"navbar navbar-expand-sm bg-dark \\\">\\n      <ul class=\\\"navbar-nav\\\">\\n\\n\\n\\n        <li class=\\\"nav-item\\\">\\n          <a  class=\\\"nav-link  mt-3\\\" style=\\\"font-size:40px;color: crimson\\\">Admin </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"logout1\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px;margin-left: 1750px\\\"> Logout </a>\\n        </li>\\n\\n\\n\\n\\n\\n\\n\\n      </ul>\\n\\n    </nav>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-3\\\">\\n        <nav class=\\\"navbar navbar-sm bg-warning\\\" >\\n          <ul class=\\\"navbar-nav ml-2\\\">\\n            <li class=\\\"nav-item \\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header bg-dark\\\">\\n                  <img class=\\\"nav-link rounded-circle\\\" src=\\\"assets/111.jpg\\\" height=\\\"200px\\\" width=\\\"200px\\\">\\n                </div>\\n\\n              </div>\\n            </li>\\n\\n\\n            <li class=\\\"nav-item\\\" style=\\\"margin-top: 50px\\\">\\n              <a routerLink=\\\"proadmin\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"><b> Profile</b> </a>\\n            </li>\\n\\n\\n          \\n\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"notiadmin\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"> <b>Notifications</b> </a>\\n            </li>\\n\\n\\n            <li class=\\\"nav-item\\\" style=\\\"margin-bottom: 300px\\\">\\n              <a routerLink=\\\"resultadmin\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"><b>Results</b></a>\\n            </li>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n          </ul>\\n\\n        </nav>\\n        \\n      </div>\\n      <div class=\\\"col-9\\\">\\n          <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n\\n   \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n \n  constructor(private ds:ServeService) { }\n\n  ngOnInit()\n   {\n    \n  }\n\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <nav class=\\\"navbar navbar-expand-sm bg-dark \\\">\\n            <ul class=\\\"navbar-nav\\\">\\n      \\n      \\n              <li class=\\\"nav-item\\\">\\n                <a  class=\\\"nav-link  mt-3\\\" style=\\\"font-size:40px;color: crimson\\\">Student </a>\\n              </li>\\n\\n              <li class=\\\"nav-item\\\">\\n                <a routerLink=\\\"logouts\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px;margin-left:1750px\\\"> Logout </a>\\n              </li>\\n\\n          \\n\\n            \\n      \\n      \\n      \\n      \\n      \\n            </ul>\\n      \\n          </nav>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-3\\\">\\n                <nav class=\\\"navbar navbar-sm bg-warning\\\" >\\n                  <ul class=\\\"navbar-nav ml-2\\\">\\n                    <li class=\\\"nav-item \\\">\\n                      <div class=\\\"card\\\">\\n                        <div class=\\\"card-header bg-dark\\\">\\n                          <img class=\\\"nav-link rounded-circle\\\" src=\\\"assets/98.jpg\\\" height=\\\"200px\\\" width=\\\"200px\\\">\\n                        </div>\\n        \\n                      </div>\\n                    </li>\\n        \\n        \\n                    <li class=\\\"nav-item\\\" style=\\\"margin-top: 50px\\\">\\n                      <a routerLink=\\\"prostu\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"><b> Profile</b> </a>\\n                    </li>\\n        \\n        \\n                   \\n        \\n        \\n                    <li class=\\\"nav-item\\\">\\n                      <a routerLink=\\\"notistu\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"> <b>Notifications</b> </a>\\n                    </li>\\n        \\n        \\n                    <li class=\\\"nav-item\\\" style=\\\"margin-bottom: 300px\\\">\\n                      <a routerLink=\\\"resultstu\\\" class=\\\"nav-link text-info mt-3\\\" style=\\\"font-size:25px\\\"><b>Results</b></a>\\n                    </li>\\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n                  </ul>\\n        \\n                </nav>\\n                \\n              </div>\\n              <div class=\\\"col-9\\\">\\n                  <router-outlet></router-outlet>\\n              </div>\\n            </div>\\n        \\n\\n\\n  </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logoutstudent',\n  templateUrl: './logoutstudent.component.html',\n  styleUrls: ['./logoutstudent.component.css']\n})\nexport class LogoutstudentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\n</div>\\n<div class=\\\"row\\\"  style=\\\"margin-top:60px\\\">\\n  <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\" >\\n\\n      \\n        <div class=\\\"form-group\\\" style=\\\"margin-left:600px\\\">\\n            <label for=\\\"s\\\" style=\\\"font-size:25px\\\" ><b>Branch:</b> </label>\\n         \\n            <select class=\\\"bg-success ml-2\\\"  [(ngModel)]=\\\"searchbranch\\\">\\n              <option> </option>\\n              <option  value=\\\"civil\\\" > civil</option>\\n              <option  value=\\\"mec\\\"  > mec</option>\\n              <option value=\\\"ece\\\" >ece </option>\\n              <option  value=\\\"cse\\\" >cse </option>\\n              <option  value=\\\"eee\\\" >eee </option>\\n              <option  value=\\\"it\\\" >eee </option>\\n            </select>\\n          </div>\\n\\n      <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n\\n          <label style=\\\"color:crimson\\\"><h1>Search  </h1></label>\\n          <label style=\\\"color:black\\\"><h5>(by date)  </h5></label>\\n      \\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchdate\\\">\\n\\n          \\n\\n          \\n      </div>\\n\\n      <div class=\\\"col-6 \\\" style=\\\"margin-top:65px\\\">\\n        \\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-left:110px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#k\\\">add new notification</button>\\n          \\n\\n        </div>\\n      </div>\\n  \\n\\n        <br/>\\n      <br/>\\n      <table border=\\\"8\\\" class=\\\"table-striped table-hover\\\" style=\\\"width:100%\\\">\\n        \\n        <thead style=\\\"font-size: 25px;color: darkblue\\\" >\\n          \\n\\n             <th >Date</th>\\n             <th>Branch</th>\\n             <th>Notification</th>\\n             <th> del</th>\\n             <th> edit</th>\\n           \\n             \\n        </thead>\\n\\n        <tr style=\\\"font-size: 20px;color:darkred\\\" *ngFor=\\\"let i of srarr|branch:searchbranch|date:searchdate\\\" >\\n          \\n          <td>{{i.Date}}</td>\\n          <td>{{i.Branch}}</td>\\n          <td>{{i.Notification}}</td>\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(i._id)\\\">Del </button></td>\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-success ml-2\\\" (click)=\\\"edit(i)\\\">Edit </button></td>\\n\\n          \\n        </tr>\\n      </table>\\n\\n  \\n     </div>\\n     <div class=\\\"col-2\\\"></div>\\n    \\n  \\n</div>\\n\\n<div *ngIf=\\\"b\\\">\\n<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8\\\">\\n\\n    <form #po=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\n      <label class=\\\"ml-3\\\"><b>Date:</b></label>\\n      <input class=\\\"ml-3\\\" type=\\\"date\\\" name=\\\"Date\\\" [(ngModel)]=\\\"i.Date\\\">\\n      <label class=\\\"ml-3\\\"><b>Branch:</b> </label>\\n      <input class=\\\"ml-3\\\" type=\\\"text\\\" name=\\\"Branch\\\" [(ngModel)]=\\\"i.Branch\\\">\\n      <label class=\\\"ml-3\\\"><b>Notification:</b></label>\\n      <input class=\\\"ml-3\\\" type=\\\"text\\\" name=\\\"Notification\\\" [(ngModel)]=\\\"i.Notification\\\">\\n      <button  type=\\\"submit\\\" class=\\\"btn btn-danger\\\"> update</button>\\n    </form>\\n\\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" >\\n\\n    <div class=\\\"modal fade \\\" id=\\\"k\\\" style=\\\"width:100%\\\" >\\n      <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\n        <div class=\\\"modal-content bg-success\\\">\\n            <form #re=\\\"ngForm\\\" (ngSubmit)=\\\"notiadmin(re.value)\\\">\\n\\n              <div  class=\\\"modal-header\\\">\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">X</button>\\n              </div>\\n\\n          <div class=\\\"modal-body\\\">\\n         \\n                <div class=\\\"form-group\\\">\\n\\n                  \\n                  <br/>\\n                    <label for=\\\"cpass\\\"><b>Date:</b></label>\\n                    <input id=\\\"cpass\\\"  type=\\\"date\\\"  class=\\\"form-control\\\" name=\\\"Date\\\" [(ngModel)]=\\\"Date\\\">\\n                  </div>\\n\\n\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"pass\\\"><b>Branch:</b></label>\\n                      <input id=\\\"pass\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Branch\\\" [(ngModel)]=\\\"Branch\\\">\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"pass\\\"><b>Notification:</b></label>\\n                        <input id=\\\"pass\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Notification\\\" [(ngModel)]=\\\"Notification\\\">\\n                      </div>\\n\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Add</button>\\n                   \\n                    </div>  \\n            </form>\\n         \\n\\n        \\n\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-notificationsadmin',\n  templateUrl: './notificationsadmin.component.html',\n  styleUrls: ['./notificationsadmin.component.css']\n})\nexport class NotificationsadminComponent implements OnInit {\n\n  constructor(private ds:ServeService) \n  {\n\n   }\n\n\n   \ni:any={};\nb:boolean;\n   r:any;\n   f:any;\n   srarr:any;\n  ngOnInit()\n   {\n    this.ds.otherData().subscribe(a=>this.srarr=a);\n    console.log(this.srarr);\n  }\n\n  // delete(x:Number)\n  // {\n  //   this.srarr.splice(x,1);\n  // }\n  notiadmin(add)\n  {\n    console.log(add);\n    this.ds.addNoti(add).subscribe(r=>{\n      alert(\" added\")\n    }\n   )};\n\n\n   delete(v)\n   {\n     console.log(\"string recieved is\"+v);\n     this.ds.delData(v).subscribe(data=>this.srarr=data);\n\n   }\n\n\n   edit(obj)\n   {\n     this.i=obj;\n     this.b=true;\n\n     console.log(obj);\n\n\n\n\n   }\n\n   update()\n   {\n    this.b=false;\n     console.log(this.i);\n     this.ds.updateData(this.i).subscribe(data=>this.srarr=data);\n    \n   }\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\n</div>\\n<div class=\\\"row\\\" style=\\\"margin-top: 150px\\\">\\n  <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <label style=\\\"color:crimson\\\"><h1>Search</h1></label>\\n            <label style=\\\"color:black\\\"><h5>(by date)  </h5></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchdate\\\">\\n            \\n          </div>\\n          <div class=\\\"col-6\\\">\\n\\n          </div>\\n          \\n\\n        </div>\\n\\n      \\n      \\n        \\n        <br/>\\n      <br/>\\n      <table border=\\\"8\\\" class=\\\"table-striped table-hover\\\" style=\\\"width:100%\\\">\\n        \\n        <thead style=\\\"font-size: 25px;color: darkblue\\\" >\\n          \\n\\n             <th >Date</th>\\n             <th>Branch</th>\\n             <th>Notification</th>\\n            \\n           \\n             \\n        </thead>\\n\\n        <tr style=\\\"font-size: 20px;color:darkred\\\" *ngFor=\\\"let i of arr|date:searchdate\\\" >\\n          \\n          <td>{{i.Date}}</td>\\n          <td>{{i.Branch}}</td>\\n          <td>{{i.Notification}}</td>\\n          \\n        </tr>\\n      </table>\\n\\n  \\n     </div>\\n     <div class=\\\"col-2\\\"></div>\\n    \\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-notificationsstud',\n  templateUrl: './notificationsstud.component.html',\n  styleUrls: ['./notificationsstud.component.css']\n})\nexport class NotificationsstudComponent implements OnInit {\n\n  constructor(private ds:ServeService) { }\narr:any;\n  ngOnInit()\n   {\n    this.ds.otherData().subscribe(a=>this.arr=a);\n    console.log(this.arr);\n  }\n\n \n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row  ml-0 mr-0\\\">\\n    <div class=\\\"col-3\\\"></div>\\n  \\n    <div class=\\\"col-6 \\\">\\n      <div clas=\\\"jumbotron \\\">\\n          <br/>\\n          <br/>\\n  \\n          <h1 >Admin registration</h1>\\n          <br/>\\n          <br/>\\n          <br/>\\n          \\n        <form #ref9=\\\"ngForm\\\" (ngSubmit)=\\\"admin(ref9.value)\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <p><label for=\\\"user\\\"> <b>EmployeeId: </b></label>\\n                  <input id=\\\"user\\\" type=\\\"text\\\"  class=\\\"form-control\\\" name=\\\"username\\\" [value]=r.username  maxlength=\\\"7\\\" >\\n                  \\n                   \\n                  \\n  \\n              </div>\\n\\n             \\n  \\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"pass\\\"> <b>new Password:</b></label>\\n                <input id=\\\"pass\\\" type=\\\"{{check1?'text':'password'}}\\\" class=\\\"form-control\\\"name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required  pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,}$\\\"   #ref2=\\\"ngModel\\\">\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"check1\\\" name=\\\"check1\\\"><label>show password</label>\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.touched&&ref2.pristine&&ref2.invalid\\\">create password</label>\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.errors?.pattern&&ref2.dirty&&ref2.invalid\\\">password be like:number,number,(a-z),(@ or # or $),(a-z)num</label>\\n\\n   \\n                \\n  \\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"cpass\\\"><b>Confirm Password:</b></label>\\n                <input id=\\\"cpass\\\" placeholder=\\\"13a@b3\\\"  type=\\\"password\\\" #cf=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"cpassword\\\"  [(ngModel)]=\\\"cpassword\\\">\\n                \\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.value!=cf.value\\\">passwords donot match</label>\\n              </div>\\n  \\n              \\n  \\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"p\\\"><b>Email:</b></label>\\n                  <input type=\\\"email\\\" id=\\\"p\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"r.email\\\">\\n                </div>\\n            </div>\\n  \\n            \\n          \\n      \\n  \\n            <div class=\\\"col-6\\\">\\n  \\n                \\n  \\n              <div class=\\\"form-group\\\">\\n                <p><label for=\\\"dob\\\"> <b>Date of Birth: </b></label>\\n                  <input id=\\\"dob\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"r.dob\\\">\\n              </div>\\n  \\n              <label class=\\\"mt-3\\\"> <b>Gender:</b></label>\\n              <div class=\\\"form-check \\\">\\n                  <label class=\\\"form-check-label\\\">\\n      \\n                  \\n                   \\n                    <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Male\\\" [(ngModel)]=\\\"r.male\\\"><b>Male</b>\\n                \\n                </label>\\n                </div>\\n                \\n                <div class=\\\"form-check \\\">\\n                    <label class=\\\"form-check-label\\\">\\n        \\n                  \\n                     \\n                      <input type=\\\"radio\\\" class=\\\"form-check-input\\\"  name=\\\"gender\\\" value=\\\"Female\\\" [(ngModel)]=\\\"r.Female\\\"><b>Female</b>\\n                    \\n                  </label>\\n                  </div>\\n  \\n              <div class=\\\"form-group mt-2\\\">\\n                <label for=\\\"no\\\"><b>Phone number:</b></label>\\n                <input id=\\\"no\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phno\\\" required pattern=\\\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"r.phno\\\" #re=ngModel>\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.touched&&re.pristine&&re.invalid\\\">phone no required</label>\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.errors?.pattern&&re.dirty&&re.invalid\\\">enter 10 digit number</label>\\n              </div>\\n  \\n              <br/>\\n              <br/>\\n\\n              <div class=\\\"row ml-4\\\">\\n                <div class=\\\"col-6\\\">\\n                    <button type=\\\"button\\\" routerLink=\\\"lo\\\" class=\\\"btn btn-danger \\\" > Back</button>  \\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <button type=\\\"submit\\\"  routerLink=\\\"dfgdh\\\" class=\\\"btn btn-success  \\\"  >update</button>\\n                </div>\\n               \\n              \\n              </div>\\n              \\n            \\n              \\n            \\n    \\n  \\n  \\n  \\n            </div>\\n          </div>\\n  \\n        </form>\\n  \\n      </div>\\n  \\n    </div>\\n    <div class=\\\"col-3\\\"></div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\nimport { Route } from '@angular/router';\n\n\n@Component({\n  selector: 'app-profileadmin',\n  templateUrl: './profileadmin.component.html',\n  styleUrls: ['./profileadmin.component.css']\n})\nexport class ProfileadminComponent implements OnInit {\n  \n  x:object={};\n  r:any={};\n  constructor(private ds:ServeService) { }\ncheck1:boolean=false;\n  ngOnInit() {\n\n   this.r= this.ds.getDataToPro();\n    console.log(this.r);\n\n  }\n\n  admin(data)\n  {\n    this.x=data;\n    console.log(this.x);\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row ml-0 mr-0\\\"  >\\n    <div class=\\\"col-3\\\"></div>\\n  <div class=\\\"col-6 \\\">\\n    <div clas=\\\"jumbotron\\\" >\\n        <br />\\n        <br />\\n      <h1 >Student registration</h1>\\n      <br />\\n      <br />\\n      \\n      <form #ref=\\\"ngForm\\\" (ngSubmit)=\\\"student(ref.value)\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <p><label for=\\\"user\\\"> <b>Username: </b></label>\\n                <input id=\\\"user\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"karthik\\\" required minlength=\\\"5\\\" maxlength=\\\"15\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" #fr=\\\"ngModel\\\">\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.touched&&fr.invalid&&fr.pristine\\\">username is mandatory </label>\\n                <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.invalid&&fr.errors?.minlength&&fr.dirty\\\">minimum 5 char required </label>\\n  \\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"cpass\\\"><b>old Password:</b></label>\\n                <input id=\\\"cpass\\\" placeholder=\\\"13a@b3\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"cpassword\\\" [(ngModel)]=\\\"cpassword\\\">\\n              </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"pass\\\"> <b> new Password:</b></label>\\n              <input id=\\\"pass\\\" type=\\\"password\\\"  type=\\\"{{check1?'text':'password'}}\\\" placeholder=\\\"13a@b3\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,}$\\\"  #ref2=\\\"ngModel\\\">\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"check1\\\" name=\\\"check1\\\"><label>show password</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.touched&&ref2.pristine&&ref2.invalid\\\">create password</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.errors?.pattern&&ref2.dirty&&ref2.invalid\\\">password be like:number,number,(a-z),(@ or # or $),(a-z)num</label>\\n  \\n  \\n  \\n            </div>\\n  \\n           \\n  \\n            \\n            <br/>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"s\\\"><b>Branch:</b> </label>\\n           \\n              <select   name=\\\"branch\\\" [(ngModel)]=\\\"branch\\\" style=\\\"margin-left:20px\\\">\\n                <option> </option>\\n                <option  value=\\\"CIVIL\\\" > CIVIL</option>\\n                <option  value=\\\"MEC\\\"  > MEC</option>\\n                <option value=\\\"ECE\\\" >ECE </option>\\n                <option  value=\\\"CSE\\\" >CSE </option>\\n                <option  value=\\\"EEE\\\" >EEE </option>\\n              </select>\\n            </div>\\n          </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n          <div class=\\\"col-6\\\">\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"p\\\"><b>Email:</b></label>\\n              <input type=\\\"email\\\" id=\\\"p\\\" placeholder=\\\"karthikkorav@gmail.com\\\" class=\\\"form-control\\\" name=\\\"email\\\"\\n                [(ngModel)]=\\\"email\\\">\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <p><label for=\\\"dob\\\"> <b>Date of Birth: </b></label>\\n                <input id=\\\"dob\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"dob\\\">\\n            </div>\\n  \\n            <label> <b>Gender:</b></label>\\n            <div class=\\\"form-check \\\">\\n              <label class=\\\"form-check-label\\\">\\n  \\n  \\n  \\n                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Male\\\" [(ngModel)]=\\\"male\\\">Male\\n  \\n              </label>\\n            </div>\\n  \\n            <div class=\\\"form-check \\\">\\n              <label class=\\\"form-check-label\\\">\\n  \\n  \\n  \\n                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Female\\\" [(ngModel)]=\\\"Female\\\">Female\\n  \\n              </label>\\n            </div>\\n  \\n            <div class=\\\"form-group mt-2\\\">\\n              <label for=\\\"no\\\"><b>Phone number:</b></label>\\n              <input id=\\\"no\\\" placeholder=\\\"7878787878\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phno\\\" required pattern=\\\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\"\\n                maxlength=\\\"10\\\" [(ngModel)]=\\\"phno\\\" #re=ngModel>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.touched&&re.pristine&&re.invalid\\\">phone no required</label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.errors?.pattern&&re.dirty&&re.invalid\\\">enter 10 digit number</label>\\n            </div>\\n  \\n  \\n          \\n            <br />\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                  <button type=\\\"button\\\" routerLink=\\\"logoutstu9\\\" class=\\\"btn btn-danger \\\" >Back</button>  \\n              </div>\\n\\n              <div class=\\\"col-6\\\">\\n                  <button type=\\\"submit\\\" routerLink=\\\"hfdhsdfh\\\"  class=\\\"btn btn-success \\\" > Update</button>\\n                </div>\\n\\n            </div>\\n          \\n  \\n  \\n  \\n  \\n  \\n          </div>\\n        </div>\\n  \\n      </form>\\n  \\n    </div>\\n    <div class=\\\"col-3\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profilestud',\n  templateUrl: './profilestud.component.html',\n  styleUrls: ['./profilestud.component.css']\n})\nexport class ProfilestudComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\n</div>\\n<div class=\\\"row\\\" style=\\\"margin-top: 150px\\\">\\n  <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\" >\\n\\n      \\n      \\n       \\n     \\n      \\n      \\n      <div class=\\\"form-group\\\" style=\\\"margin-left:600px\\\">\\n        <label for=\\\"s\\\" style=\\\"font-size:25px\\\" ><b>Branch:</b> </label>\\n     \\n        <select class=\\\"bg-success ml-2\\\"  [(ngModel)]=\\\"searchbranch\\\">\\n          <option> </option>\\n          <option  value=\\\"civil\\\" > civil</option>\\n          <option  value=\\\"mec\\\"  > mec</option>\\n          <option value=\\\"ece\\\" >ece </option>\\n          <option  value=\\\"cse\\\" >cse </option>\\n          <option  value=\\\"eee\\\" >eee </option>\\n          <option  value=\\\"it\\\" >eee </option>\\n        </select>\\n      </div>\\n\\n\\n          <div class=\\\"row\\\">\\n      <div class=\\\"col-6 \\\">\\n        <label style=\\\"color:crimson\\\"><h1>Search</h1></label>\\n        <label style=\\\"color:black\\\"><h5>(by date)  </h5></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchdate\\\">\\n        \\n      </div>\\n\\n      <div class=\\\"col-6\\\" style=\\\"margin-top:65px\\\" >\\n        \\n        \\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-left:110px\\\"  data-target=\\\"#l\\\" data-toggle=\\\"modal\\\" >Add new result</button>\\n          \\n\\n      </div>\\n    </div>\\n      \\n      \\n        \\n        <br/>\\n      <br/>\\n      <table border=\\\"8\\\" class=\\\"table-striped table-hover\\\" style=\\\"width:100%\\\">\\n        \\n        <thead style=\\\"font-size: 25px;color: darkblue\\\" >\\n          \\n\\n            \\n             <th>Date</th>\\n             <th>Branch</th>\\n             <th>name</th>\\n             <th>percentage</th>\\n             <th> del</th>\\n             <th>edit</th>\\n             \\n        </thead>\\n\\n        <tr style=\\\"font-size: 20px;color:darkred\\\" *ngFor=\\\"let i of ararr|branch:searchbranch|date:searchdate \\\" >\\n          \\n          \\n          \\n          \\n          <td>{{i.Date}}</td>\\n          <td>{{i.Branch}}</td>\\n          <td>{{i.name}}</td>\\n          <td>{{i.percentage}}</td>\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(i._id)\\\">Del </button></td>\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-success ml-2\\\" (click)=\\\"edit(i)\\\">Edit </button></td>\\n        </tr>\\n      </table>\\n\\n  \\n     </div>\\n     <div class=\\\"col-2\\\"></div>\\n    \\n  \\n</div>\\n\\n\\n<div *ngIf=\\\"b\\\">\\n  <div class=\\\"row mt-5\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\">\\n  \\n      <form #po=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\n        <label class=\\\"ml-3\\\"><b>Date:</b></label>\\n        <input class=\\\"ml-3\\\" type=\\\"date\\\" name=\\\"Date\\\" [(ngModel)]=\\\"i.Date\\\">\\n        <label class=\\\"ml-3\\\"><b>Branch:</b> </label>\\n        <input class=\\\"ml-3\\\" type=\\\"text\\\" name=\\\"Branch\\\" [(ngModel)]=\\\"i.Branch\\\">\\n        <label class=\\\"ml-3\\\"><b>Name:</b></label>\\n        <input class=\\\"ml-3\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"i.name\\\">\\n        \\n        <label class=\\\"ml-3\\\"><b>Notification:</b></label>\\n        <input class=\\\"ml-3\\\" type=\\\"text\\\" name=\\\"percentage\\\" [(ngModel)]=\\\"i.percentage\\\">\\n        <button  type=\\\"submit\\\" class=\\\"btn btn-danger\\\"> update</button>\\n      </form>\\n  \\n    </div>\\n    <div class=\\\"col-2\\\"></div>\\n  </div>\\n  </div>\\n\\n\\n\\n\\n<div class=\\\"row\\\" >\\n\\n    <div class=\\\"modal fade \\\" id=\\\"l\\\" style=\\\"width:100%\\\" >\\n      <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\n        <div class=\\\"modal-content bg-success\\\">\\n            <form #re=\\\"ngForm\\\" (ngSubmit)=\\\"resAdmin(re.value)\\\">\\n\\n              <div  class=\\\"modal-header\\\">\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">X</button>\\n              </div>\\n\\n          <div class=\\\"modal-body\\\">\\n         \\n                <div class=\\\"form-group\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"pass\\\"><b>Branch:</b></label>\\n                        <input id=\\\"pass\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Branch\\\" [(ngModel)]=\\\"Branch\\\">\\n                      </div>\\n                      \\n                  <br/>\\n                    <label for=\\\"cpass\\\"><b>Date:</b></label>\\n                    <input id=\\\"cpass\\\"  type=\\\"date\\\" placeholder=\\\"date/mon/year\\\" class=\\\"form-control\\\" name=\\\"Date\\\" [(ngModel)]=\\\"Date\\\">\\n                  </div>\\n\\n\\n                  \\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"pass\\\"><b>Name::</b></label>\\n                        <input id=\\\"pass\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\">\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"pass\\\"><b>Percentage:</b></label>\\n                          <input id=\\\"pass\\\"  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"percentage\\\" [(ngModel)]=\\\"percentage\\\">\\n                        </div>\\n\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Add</button>\\n                  \\n                    </div>  \\n            </form>\\n         \\n\\n        \\n\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\n\n\n@Component({\n  selector: 'app-resultsadmin',\n  templateUrl: './resultsadmin.component.html',\n  styleUrls: ['./resultsadmin.component.css']\n})\nexport class ResultsadminComponent implements OnInit {\n\n  constructor(private ds:ServeService) { }\n\n  ararr:Object;\ni:any={};\nb:boolean;\n\n  ngOnInit()\n   {\n    this.ds.getData().subscribe(a=>this.ararr=a);\n    console.log(this.ararr);\n  }\n\n\n\n  \n  \n  resAdmin(add)\n  {\n    console.log(add);\n    this.ds.addRes(add).subscribe(r=>{\n      alert(\" added\");\n  }\n    )};\n\n\n    delete(v)\n    {\n      console.log(\"string recieved is\"+v);\n      this.ds.resultDel(v).subscribe(data=>this.ararr=data);\n \n    }\n\n\n    edit(obj)\n    {\n      this.i=obj;\n      this.b=true;\n \n      console.log(obj);\n \n \n \n \n    }\n \n    update()\n    {\n     this.b=false;\n      console.log(this.i);\n      this.ds.updateResStud(this.i).subscribe(data=>this.ararr=data);\n     \n    }\n \n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\n  </div>\\n  <div class=\\\"row\\\" style=\\\"margin-top: 150px\\\">\\n    <div class=\\\"col-2\\\"></div>\\n      <div class=\\\"col-8\\\" >\\n  \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6 \\\">\\n            <label style=\\\"color:crimson\\\"><h1>Search</h1></label>\\n            <label style=\\\"color:black\\\"><h5>(by date)  </h5></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchdate\\\">\\n            </div>\\n            <div class=\\\"col-6\\\"></div>\\n          </div>\\n        \\n        \\n          \\n          <br/>\\n        <br/>\\n        <table border=\\\"8\\\" class=\\\"table-striped table-hover\\\" style=\\\"width:100%\\\">\\n          \\n          <thead style=\\\"font-size: 25px;color: darkblue\\\" >\\n            \\n  \\n              <th>Date</th>\\n              <th>Branch</th>\\n              <th>name</th>\\n              <th>percentage</th>\\n               \\n          </thead>\\n  \\n          <tr style=\\\"font-size: 20px;color:darkred\\\" *ngFor=\\\"let i of srarr|date:searchdate\\\" >\\n            \\n          \\n              <td>{{i.Date}}</td>\\n              <td>{{i.Branch}}</td>\\n              <td>{{i.name}}</td>\\n              <td>{{i.percentage}}</td>\\n          </tr>\\n        </table>\\n  \\n    \\n       </div>\\n       <div class=\\\"col-2\\\"></div>\\n      \\n    \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-resultsstud',\n  templateUrl: './resultsstud.component.html',\n  styleUrls: ['./resultsstud.component.css']\n})\nexport class ResultsstudComponent implements OnInit {\n\n  constructor(private ds:ServeService) { }\n  srarr:Object;\n  ngOnInit() {\n    this.ds.getData().subscribe(a=>this.srarr=a);\n    console.log(this.srarr);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router'\nimport { HomeComponent } from '../home/home.component';\nimport { AboutComponent } from '../about/about.component';\nimport { ContactComponent } from '../contact/contact.component';\nimport { AdminComponent } from '../admin/admin.component';\nimport { StudentComponent } from '../student/student.component';\nimport { LoginComponent } from '../login/login.component';\nimport { LogoutComponent } from '../logout/logout.component';\nimport { LogoutstudentComponent } from '../logoutstudent/logoutstudent.component';\nimport { SuccessComponent } from '../success/success.component';\nimport{ProfileadminComponent}from '../profileadmin/profileadmin.component';\n\nimport {NotificationsadminComponent}from '../notificationsadmin/notificationsadmin.component';\nimport{ResultsadminComponent}from '../resultsadmin/resultsadmin.component'\nimport { ProfilestudComponent } from '../profilestud/profilestud.component';\nimport { NotificationsstudComponent } from '../notificationsstud/notificationsstud.component';\n\nimport { ResultsstudComponent } from '../resultsstud/resultsstud.component';\n\n\n\n@NgModule({\n  imports:\n    [\n      RouterModule.forRoot([{ path: 'home', component: HomeComponent, children: [\n        { path: 'about', component: AboutComponent },\n         { path: 'contact', component: ContactComponent,children:[{path:\"s\",redirectTo:\"/home/success\"}]  }, \n         { path: 'admin', component: AdminComponent},\n          { path: 'student', component: StudentComponent },\n           { path: 'login', component: LoginComponent },\n            { path: 'success', component: SuccessComponent },\n             { path: 'home', redirectTo: '/home', pathMatch: 'full' }] },\n      { path: 'logout', component: LogoutComponent, children: [{path:'proadmin',component:ProfileadminComponent,children:[{path:'lo',redirectTo:'/logout'}]},{path:'notiadmin',component:NotificationsadminComponent},{path:'resultadmin',component:ResultsadminComponent},{ path: 'logout1', redirectTo: '/home', pathMatch: 'full' }] },\n      { path: 'logoutstudent', component: LogoutstudentComponent, children: [{path:'prostu',component:ProfilestudComponent,children:[{path:'logoutstu9',redirectTo:'/logoutstudent',pathMatch:'full'}]},{path:'notistu',component:NotificationsstudComponent},{path:'resultstu',component:ResultsstudComponent},{ path: 'logouts', redirectTo: '/home', pathMatch: 'full' }] },\n      { path: '', redirectTo: '/home', pathMatch: 'full' },\n\n      ])\n    ],\n  exports: [RouterModule]\n\n})\nexport class RouModule { }\n","import { Injectable } from '@angular/core';\nimport{HttpClient}from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServeService {\n\n  r:any;\n  constructor(private hc:HttpClient)\n   { \n\n   }\n   dataserve:Object={};\n\n   getData():Observable<any>\n   {\n    return this.hc.get('/logout/resultadmin');\n   }\n\n   setDataFromLogin(r):any\n   {\n     this.r=r;\n     console.log(r);\n\n   }\n\n   getDataToPro():any{\n     return this.r;\n   }\n\n   \n\n   otherData():Observable<any>\n   {\n    return this.hc.get('/logout/notiadmin');\n   }\n\n   adminRedData(data):Observable<any>\n   {\n    \n     console.log(data);\n     return this.hc.post('/home/admin',data);\n   }\n\n\n   stuRedData(data):Observable<any>\n   {\n    \n     console.log(data);\n     return this.hc.post('/home/student',data);\n   }\n\n   addNoti(add):Observable<any>\n   {\n\n    console.log(add);\n     return this.hc.post('/logout/notiadmin',add);\n   }\n\n\n   addRes(add):Observable<any>\n   {\n\n    console.log(add);\n     return this.hc.post('/logout/resultadmin',add);\n   }\n\n\n   delData(id):Observable<any>\n   {\n\n    console.log(id);\n     return this.hc.delete('/logout/notiadmin/'+id);\n   }\n\n   updateData(i):Observable<any>\n   {\n     console.log(i);\n     return this.hc.put('/logout/notiadmin',i);\n   }\n\n\n   loginCheck(data):Observable<any>\n   {\n    return this.hc.post('/home/login',data);\n   }\n\n\n   resultDel(id):Observable<any>\n   {\n     console.log(id)\n     return  this.hc.delete('/logout/resultadmin/'+id);\n     \n   }\n \n\n   updateResStud(i):Observable<any>\n   {\n    \n      console.log(i);\n      return this.hc.put('/logout/resultadmin',i);\n    \n   }\n  \n} \n","module.exports = \"\"","module.exports = \"<div class=\\\"row ml-0 mr-0\\\"  >\\n  <div class=\\\"col-3\\\"></div>\\n<div class=\\\"col-6 \\\">\\n  <div clas=\\\"jumbotron\\\" >\\n      <br />\\n      <br />\\n    <h1 >Student registration</h1>\\n    <br />\\n    <br />\\n    \\n    <form #ref=\\\"ngForm\\\" (ngSubmit)=\\\"student(ref.value)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <p><label for=\\\"user\\\"> <b>Username: </b></label>\\n              <input id=\\\"user\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"karthik\\\" required minlength=\\\"8\\\" maxlength=\\\"15\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" #fr=\\\"ngModel\\\">\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.touched&&fr.invalid&&fr.pristine\\\">username is mandatory </label>\\n              <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"fr.invalid&&fr.errors?.minlength&&fr.dirty\\\">minimum 8 char required </label>\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pass\\\"> <b>Password:</b></label>\\n            <input id=\\\"pass\\\"  type=\\\"{{check1?'text':'password'}}\\\" placeholder=\\\"13a@b3\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,}$\\\"  #ref2=\\\"ngModel\\\">\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"check1\\\" name=\\\"check1\\\"><label>show password</label>\\n            <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.touched&&ref2.pristine&&ref2.invalid\\\">create password</label>\\n            <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.errors?.pattern&&ref2.dirty&&ref2.invalid\\\">password should contain: 1 number,1 special symbol and 1 character atleast</label>\\n\\n\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"cpass\\\"><b>Confirm Password:</b></label>\\n            <input id=\\\"cpass\\\" placeholder=\\\"13a@b3\\\" type=\\\"password\\\" class=\\\"form-control\\\" #cf=\\\"ngModel\\\" name=\\\"cpassword\\\" [(ngModel)]=\\\"cpassword\\\">\\n            <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"ref2.value!=cf.value\\\">passwords donot match</label>\\n          </div>\\n\\n          \\n          <br/>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"s\\\"><b>Branch:</b> </label>\\n         \\n            <select   name=\\\"branch\\\" [(ngModel)]=\\\"branch\\\" style=\\\"margin-left:20px\\\">\\n              <option> </option>\\n              <option  value=\\\"CIVIL\\\" > CIVIL</option>\\n              <option  value=\\\"MEC\\\"  > MEC</option>\\n              <option value=\\\"ECE\\\" >ECE </option>\\n              <option  value=\\\"CSE\\\" >CSE </option>\\n              <option  value=\\\"EEE\\\" >EEE </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n        <div class=\\\"col-6\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"p\\\"><b>Email:</b></label>\\n            <input type=\\\"email\\\" id=\\\"p\\\" placeholder=\\\"karthik.....@gmail.com\\\" class=\\\"form-control\\\" name=\\\"email\\\"\\n              [(ngModel)]=\\\"email\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <p><label for=\\\"dob\\\"> <b>Date of Birth: </b></label>\\n              <input id=\\\"dob\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"dob\\\">\\n          </div>\\n\\n          <label> <b>Gender:</b></label>\\n          <div class=\\\"form-check \\\">\\n            <label class=\\\"form-check-label\\\">\\n\\n\\n\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Male\\\" [(ngModel)]=\\\"male\\\">Male\\n\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-check \\\">\\n            <label class=\\\"form-check-label\\\">\\n\\n\\n\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" value=\\\"Female\\\" [(ngModel)]=\\\"Female\\\">Female\\n\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-group mt-2\\\">\\n            <label for=\\\"no\\\"><b>Phone number:</b></label>\\n            <input id=\\\"no\\\" placeholder=\\\"78787...\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phno\\\" required pattern=\\\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\"\\n              maxlength=\\\"10\\\" [(ngModel)]=\\\"phno\\\" #re=ngModel>\\n            <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.touched&&re.pristine&&re.invalid\\\">phone no required</label>\\n            <label class=\\\"alert alert-danger validation-message\\\" *ngIf=\\\"re.errors?.pattern&&re.dirty&&re.invalid\\\">enter 10 digit number</label>\\n          </div>\\n\\n\\n        \\n          <br />\\n          <button type=\\\"submit\\\"   class=\\\"btn btn-danger mt-5\\\" style=\\\"margin-left:400px\\\" [disabled]=\\\"!ref.valid\\\">Register</button>\\n\\n\\n\\n\\n\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n  <div class=\\\"col-3\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport{ Router }from'@angular/router'\nimport { Route } from '@angular/compiler/src/core';\nimport { ServeService } from '../serve.service';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n  studentdata:Object={};\n  branch:string=\"\";\n  check1:boolean=false;\n  password:string=\"\";\n  constructor(private router:Router, private ds:ServeService) { }\n\n  ngOnInit() {\n  }\n\n  student(data)\n  {\n    \n    \n    console.log(data);\n    this.ds.stuRedData(data).subscribe(r=>{\n      alert(\"successfully logged\");\n      this.router.navigate(['/home']);\n\n  \n  })};\n}\n\n  \n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" style=\\\"height: 100%\\\">\\n  <div class=\\\"col-3\\\">\\n\\n  </div>\\n  <div class=\\\"col-3\\\" >\\n    \\n    </div>\\n    <div class=\\\"col-6\\\" >\\n        <h1 style=\\\"margin-bottom:150px;margin-top:150px \\\">you have successfully registered...</h1>\\n      </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}